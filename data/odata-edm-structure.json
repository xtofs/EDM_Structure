{
    "metadata": {
        "title": "OData EDM model structure",
        "description": "This document lists all EDM model elements, their attributes and relationships. It [categorizes the attributes](#attribute-categories) in different types (basic, reference, ..) and describes their semantics in detail . It is based on the OASIS OData CSDL XML Representation Version 4.02 specification, and adds the details about allowed values, symbolic references and constraints for elements and attributes.",
        "baseUrl": "https://docs.oasis-open.org/odata/odata-csdl-xml/v4.02/csd01/odata-csdl-xml-v4.02-csd01.html",
        "source": "odata-edm-structure.json",
        "sourceUrl": "https://github.com/xtofs/EDM_Structure/blob/953bf6fea5979ef0c4824aac2493c2e4c8ede60e/data/odata-edm-structure.json",
        "version": "4.02"
    },
    "elements": [
        {
            "name": "edm:Schema",
            "description": "One or more schemas describe the entity model exposed by an OData service. The schema acts as a namespace for elements of the entity model such as entity types, complex types, enumerations and terms.",
            "ref": "#ElementedmSchema.7",
            "children": [
                "edm:EntityType",
                "edm:ComplexType",
                "edm:EnumType",
                "edm:TypeDefinition",
                "edm:Action",
                "edm:Function",
                "edm:EntityContainer",
                "edm:Term",
                "edm:Annotations"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "description": "A simple identifier used to uniquely identify the element within its containing scope.",
                    "name": "Namespace",
                    "ref": "#AttributeNamespace.5.1",
                    "subcategory": "simple-identifier"
                },
                {
                    "category": "basic",
                    "description": "The alias of a schema MAY be used instead of the namespaceto identify model elements of that schema.",
                    "name": "Alias",
                    "ref": "#AttributeAlias.5.2",
                    "subcategory": "simple-identifier"
                }
            ]
        },
        {
            "name": "edm:Annotations",
            "description": "Used to apply a group of annotations to a single model element.",
            "ref": "#ElementedmAnnotations.8",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "path",
                    "context": "can reference any model element",
                    "description": "target path expression",
                    "name": "Target",
                    "ref": "#AttributeTarget.8.1",
                    "subcategory": "Absolute Path"
                },
                {
                    "category": "basic",
                    "description": "Optional qualifier to distinguish multiple instances",
                    "name": "Qualifier",
                    "ref": "#AttributeQualifier.6.2",
                    "subcategory": "simple-identifier"
                }
            ]
        },
        {
            "name": "edm:EntityType",
            "description": "An entity type is the template for an entity: any uniquely identifiable record.",
            "ref": "#ElementedmEntityType.9",
            "children": [
                "edm:Annotation",
                "edm:Key",
                "edm:Property",
                "edm:NavigationProperty"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "description": "The entity type’s name that MUST be unique within its schema.",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier"
                },
                {
                    "category": "reference",
                    "description": "qualified name of an edm:EntityType",
                    "name": "BaseType",
                    "ref": "#AttributeBaseType.9.2",
                    "subcategory": "Absolute Reference"
                },
                {
                    "category": "basic",
                    "description": "Whether the type is abstract and cannot be instantiated directly",
                    "name": "Abstract",
                    "ref": "#AttributeAbstract.9.3",
                    "subcategory": "boolean"
                },
                {
                    "category": "basic",
                    "description": "Whether the type allows additional properties not explicitly declared",
                    "name": "OpenType",
                    "ref": "#AttributeOpenType.9.4",
                    "subcategory": "boolean"
                },
                {
                    "category": "basic",
                    "description": "Whether the entity type supports media resources",
                    "name": "HasStream",
                    "ref": "#AttributeHasStream.9.5",
                    "subcategory": "boolean"
                }
            ]
        },
        {
            "name": "edm:Key",
            "description": "An entity is uniquely identified within an entity set by its key.",
            "ref": "#ElementedmKey.10",
            "children": [
                "edm:PropertyRef"
            ],
            "attributes": []
        },
        {
            "name": "edm:PropertyRef",
            "description": "An entity type’s key refers to the set of properties whose values uniquely identify an instance of the entity type within an entity set.",
            "ref": "#ElementedmPropertyRef.11",
            "children": [],
            "attributes": [
                {
                    "category": "path",
                    "context": "relative to the containing entity type",
                    "description": "path to structural property",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "Relative Path"
                },
                {
                    "category": "basic",
                    "description": "Alternative name that can be used to reference the property",
                    "name": "Alias",
                    "ref": "#AttributeAlias.5.2",
                    "subcategory": "simple-identifier"
                }
            ]
        },
        {
            "name": "edm:Property",
            "description": "A structural property is a property of a structured type",
            "ref": "#ElementedmProperty.12",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "description": "The name identifier of the element",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier"
                },
                {
                    "category": "reference",
                    "description": "qualified type name or collection of that",
                    "name": "Type",
                    "ref": "#AttributeType.12.2"
                },
                {
                    "category": "basic",
                    "description": "Whether the property can have null values",
                    "name": "Nullable",
                    "ref": "#AttributeNullable.12.3",
                    "subcategory": "boolean"
                },
                {
                    "category": "basic",
                    "description": "the model's value of the attribute when the attribute is not present in CSDL",
                    "name": "DefaultValue",
                    "ref": "#AttributeDefaultValue.12.4",
                    "subcategory": "primitive-value"
                },
                {
                    "category": "basic",
                    "description": "specifies the maximum number of digits allowed to the right of the decimal point.",
                    "name": "Scale",
                    "ref": "#AttributeDefaultValue.12.4",
                    "subcategory": "non-negative-integer",
                    "symbols": [
                        "floating",
                        "variable"
                    ]
                }
            ]
        },
        {
            "name": "edm:NavigationProperty",
            "description": "A navigation property allows navigation to related entities.",
            "ref": "#ElementedmNavigationProperty.13",
            "children": [
                "edm:OnDelete",
                "edm:ReferentialConstraint",
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "description": "The name identifier of the element",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier"
                },
                {
                    "category": "reference",
                    "description": "qualified entity type name or collection of that",
                    "name": "Type",
                    "ref": "#AttributeType.12.2",
                    "subcategory": "Absolute Reference"
                },
                {
                    "category": "basic",
                    "description": "Whether the property can have null values",
                    "name": "Nullable",
                    "ref": "#AttributeNullable.12.3",
                    "subcategory": "boolean"
                },
                {
                    "category": "path",
                    "context": "relative to the target entity type specified in Type attribute",
                    "description": "path to partner navigation property",
                    "name": "Partner",
                    "ref": "#AttributePartner.13.4",
                    "subcategory": "Relative Path"
                },
                {
                    "category": "basic",
                    "description": "Whether the navigation property contains its target entities",
                    "name": "ContainsTarget",
                    "ref": "#AttributeContainsTarget.13.5",
                    "subcategory": "boolean"
                }
            ]
        },
        {
            "name": "edm:ReferentialConstraint",
            "description": "Entity containers define the entity sets, singletons, function and action imports exposed by the service.",
            "ref": "#ElementedmReferentialConstraint.14",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "path",
                    "context": "relative to the containing navigation property's source entity type",
                    "description": "path to dependent property",
                    "name": "Property",
                    "ref": "#AttributeProperty.14.1",
                    "subcategory": "Relative Path"
                },
                {
                    "category": "path",
                    "context": "relative to the containing navigation property's target entity type",
                    "description": "path to principal property",
                    "name": "ReferencedProperty",
                    "ref": "#AttributeReferencedProperty.14.2",
                    "subcategory": "Relative Path"
                }
            ]
        },
        {
            "name": "edm:OnDelete",
            "description": "The action the service will take on related entities when the entity on which the navigation property is defined is deleted.",
            "ref": "#ElementedmOnDelete.15",
            "children": [],
            "attributes": [
                {
                    "category": "basic",
                    "description": "action the service will take on related entities when the entity is deleted.",
                    "name": "Action",
                    "ref": "#AttributeAction.15.1",
                    "symbols": [
                        "Cascade",
                        "None",
                        "SetNull",
                        "SetDefault"
                    ]
                }
            ]
        },
        {
            "name": "edm:ComplexType",
            "description": "Complex types are keyless nominal structured types. The lack of a key means that instances of complex types cannot be referenced, created, updated or deleted independently of an entity type. Complex types allow entity models to group properties into common structures.",
            "ref": "#ElementedmComplexType.16",
            "children": [
                "edm:Annotation",
                "edm:Property",
                "edm:NavigationProperty"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "description": "The name identifier of the element",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier"
                },
                {
                    "category": "reference",
                    "description": "qualified name of a edm:ComplexType",
                    "name": "BaseType",
                    "ref": "#AttributeBaseType.9.2",
                    "subcategory": "Absolute Reference"
                },
                {
                    "category": "basic",
                    "description": "Whether the type is abstract and cannot be instantiated directly",
                    "name": "Abstract",
                    "ref": "#AttributeAbstract.9.3",
                    "subcategory": "boolean"
                },
                {
                    "category": "basic",
                    "description": "Whether the type allows additional properties not explicitly declared",
                    "name": "OpenType",
                    "ref": "#AttributeOpenType.9.4",
                    "subcategory": "boolean"
                }
            ]
        },
        {
            "name": "edm:EnumType",
            "description": "Enumeration types are nominal types that represent a non-empty series of related values. Enumeration types expose these related values as members of the enumeration.",
            "ref": "#ElementedmEnumType.17",
            "children": [
                "edm:Annotation",
                "edm:Member"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier",
                    "description": "The enumeration type’s name"
                },
                {
                    "category": "reference",
                    "constraints": "restricted to: Edm.Byte, Edm.SByte, Edm.Int16, Edm.Int32, or Edm.Int64",
                    "description": "qualified name of and integer type",
                    "name": "UnderlyingType",
                    "ref": "#AttributeUnderlyingType.17.2"
                },
                {
                    "category": "basic",
                    "description": "Whether the enumeration supports bitwise operations",
                    "name": "IsFlags",
                    "ref": "#AttributeIsFlags.17.3",
                    "subcategory": "boolean"
                }
            ]
        },
        {
            "name": "edm:Member",
            "description": "Enumeration type values consist of discrete members. Each member is identified by its name and must specify an associated numeric value.",
            "ref": "#ElementedmMember.18",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "description": "The name identifier of the element",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier"
                },
                {
                    "category": "basic",
                    "description": "integer value",
                    "name": "Value",
                    "ref": "#AttributeValue.18.2",
                    "subcategory": "integer"
                }
            ]
        },
        {
            "name": "edm:TypeDefinition",
            "description": "A type definition defines a specialization of one of the primitive types.",
            "ref": "#ElementedmTypeDefinition.19",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "description": "The name identifier of the element",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier"
                },
                {
                    "category": "reference",
                    "constraints": "cannot be another type definition",
                    "description": "qualified name of primitive type",
                    "name": "UnderlyingType",
                    "ref": "#AttributeUnderlyingType.17.2"
                }
            ]
        },
        {
            "name": "edm:Action",
            "description": "Actions are service-defined operations that may have observable side effects and may return a single instance or a collection of instances of any type.",
            "ref": "#ElementedmAction.20",
            "children": [
                "edm:Annotation",
                "edm:Parameter",
                "edm:ReturnType"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier",
                    "description": "The action’s name."
                },
                {
                    "category": "basic",
                    "description": "Whether the action/function is bound to a specific entity type",
                    "name": "IsBound",
                    "ref": "#AttributeIsBound.21.2",
                    "subcategory": "boolean"
                },
                {
                    "category": "path",
                    "context": "relative to the action's parameters when bound",
                    "description": "entity set path expression",
                    "name": "EntitySetPath",
                    "ref": "#AttributeEntitySetPath.21.3",
                    "subcategory": "Relative Path"
                }
            ]
        },
        {
            "name": "edm:Function",
            "description": "Function overloads allow functions to be defined with multiple different parameter sets.",
            "ref": "#ElementedmFunction.21",
            "children": [
                "edm:Annotation",
                "edm:Parameter",
                "edm:ReturnType"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier",
                    "description": "The function's name."
                },
                {
                    "category": "basic",
                    "description": "Whether the action/function is bound to a specific entity type",
                    "name": "IsBound",
                    "ref": "#AttributeIsBound.21.2",
                    "subcategory": "boolean"
                },
                {
                    "category": "path",
                    "context": "relative to the function's parameters when bound",
                    "description": "entity set path expression",
                    "name": "EntitySetPath",
                    "ref": "#AttributeEntitySetPath.21.3",
                    "subcategory": "Relative Path"
                },
                {
                    "category": "basic",
                    "description": "Whether the function can be used in composition with other functions",
                    "name": "IsComposable",
                    "ref": "#AttributeIsComposable.21.4",
                    "subcategory": "boolean"
                }
            ]
        },
        {
            "name": "edm:ReturnType",
            "description": "The return type of an action or function overload may be any type in scope, or a collection of any type in scope.",
            "ref": "#ElementedmReturnType.22",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "reference",
                    "description": "qualified type name or collection",
                    "name": "Type",
                    "ref": "#AttributeType.12.2"
                },
                {
                    "category": "basic",
                    "description": "Whether the property can have null values",
                    "name": "Nullable",
                    "ref": "#AttributeNullable.12.3",
                    "subcategory": "boolean"
                }
            ]
        },
        {
            "name": "edm:Parameter",
            "description": "An action or function overload may specify parameters. Each parameter must have a name that is a simple identifier and must specify a type.",
            "ref": "#ElementedmParameter.23",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "description": "The name identifier of the element",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier"
                },
                {
                    "category": "reference",
                    "description": "qualified type name or collection",
                    "name": "Type",
                    "ref": "#AttributeType.12.2"
                },
                {
                    "category": "basic",
                    "description": "Whether the property can have null values",
                    "name": "Nullable",
                    "ref": "#AttributeNullable.12.3",
                    "subcategory": "boolean"
                }
            ]
        },
        {
            "name": "edm:EntityContainer",
            "description": "Entity containers define the entity sets, singletons, function and action imports exposed by the service.",
            "ref": "#ElementedmEntityContainer.24",
            "children": [
                "edm:ActionImport",
                "edm:Annotation",
                "edm:EntitySet",
                "edm:FunctionImport",
                "edm:Singleton"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier",
                    "description": "The EntityContainer's name"
                },
                {
                    "category": "reference",
                    "description": "qualified entity container name",
                    "name": "Extends",
                    "ref": "#AttributeExtends.24.2",
                    "subcategory": "Absolute Reference"
                }
            ]
        },
        {
            "name": "edm:EntitySet",
            "description": "Entity sets are top-level collection-valued resources. An entity set is identified by its name and must specify a type that must be an entity type in scope.",
            "ref": "#ElementedmEntitySet.25",
            "children": [
                "edm:NavigationPropertyBinding",
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier",
                    "description": "The value of Name is the entity set’s name"
                },
                {
                    "category": "reference",
                    "description": "qualified entity type name",
                    "name": "EntityType",
                    "ref": "#AttributeEntityType.25.2",
                    "subcategory": "Absolute Reference"
                },
                {
                    "category": "basic",
                    "description": "Whether to include this element in the service document",
                    "name": "IncludeInServiceDocument",
                    "ref": "#AttributeIncludeInServiceDocument.25.3",
                    "subcategory": "boolean"
                }
            ]
        },
        {
            "name": "edm:Singleton",
            "description": "Singletons are top-level single-valued resources. A singleton is identified by its name and must specify a type that must be an entity type in scope.",
            "ref": "#ElementedmSingleton.26",
            "children": [
                "edm:NavigationPropertyBinding",
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "name": "Name",
                    "ref": "#AttributeName.9.1",
                    "subcategory": "simple-identifier",
                    "description": "The value of Name is the singleton's name"
                },
                {
                    "category": "reference",
                    "description": "qualified entity type name",
                    "name": "Type",
                    "ref": "#AttributeType.12.2",
                    "subcategory": "Absolute Reference"
                },
                {
                    "category": "basic",
                    "description": "Whether the property can have null values",
                    "name": "Nullable",
                    "ref": "#AttributeNullable.12.3",
                    "subcategory": "boolean"
                }
            ]
        },
        {
            "name": "edm:NavigationPropertyBinding",
            "description": "Navigation property bindings associate a navigation property with a target entity set or singleton, allowing navigation between entity sets.",
            "ref": "#ElementedmNavigationPropertyBinding.27",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "path",
                    "context": "relative to the containing entity set's entity type",
                    "description": "navigation property path expression",
                    "name": "Path",
                    "ref": "#AttributePath.27.1",
                    "subcategory": "Relative Path"
                },
                {
                    "category": "path",
                    "context": "relative to the containing entity container",
                    "description": "target path to entity set/singleton",
                    "name": "Target",
                    "ref": "#AttributeTarget.27.2",
                    "subcategory": "Relative Path"
                }
            ]
        },
        {
            "name": "edm:ActionImport",
            "description": "Action imports allow exposing actions from an entity container. Each action import must specify the action it imports and the EntitySet or Singleton that exposes it.",
            "ref": "#ElementedmActionImport.28",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "name": "Name",
                    "ref": "#AttributeName.28.1",
                    "subcategory": "simple-identifier",
                    "description": "The ActionImport's name."
                },
                {
                    "category": "reference",
                    "description": "qualified unbound action name",
                    "name": "Action",
                    "ref": "#AttributeAction.28.2",
                    "subcategory": "Absolute Reference"
                },
                {
                    "category": "reference",
                    "context": "relative to the containing entity container",
                    "description": "entity set name or target path",
                    "name": "EntitySet",
                    "ref": "#AttributeEntitySet.28.3",
                    "subcategory": "Relative Reference"
                }
            ]
        },
        {
            "name": "edm:FunctionImport",
            "description": "Function imports allow exposing functions from an entity container. All unbound overloads of the imported function can be invoked from the entity container.",
            "ref": "#ElementedmFunctionImport.29",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "name": "Name",
                    "ref": "#AttributeName.29.1",
                    "subcategory": "simple-identifier",
                    "description": "The function import’s name."
                },
                {
                    "category": "reference",
                    "description": "qualified unbound function name",
                    "name": "Function",
                    "ref": "#AttributeFunction.29.2",
                    "subcategory": "Absolute Reference"
                },
                {
                    "category": "reference",
                    "context": "relative to the containing entity container",
                    "description": "entity set name or target path",
                    "name": "EntitySet",
                    "ref": "#AttributeIncludeInServiceDocument.29.4",
                    "subcategory": "Relative Reference"
                },
                {
                    "category": "basic",
                    "description": "Whether to include this element in the service document",
                    "name": "IncludeInServiceDocument",
                    "ref": "#AttributeIncludeInServiceDocument.25.3",
                    "subcategory": "boolean"
                }
            ]
        },
        {
            "name": "edm:Term",
            "description": "A term allows annotating a model element or OData resource representation with additional data.",
            "ref": "#ElementedmTerm.30",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "name": "Name",
                    "ref": "#AttributeName.30.1",
                    "subcategory": "simple-identifier",
                    "description": "The term’s name."
                },
                {
                    "category": "reference",
                    "description": "qualified type name or collection",
                    "name": "Type",
                    "ref": "#AttributeType.30.2"
                },
                {
                    "category": "basic",
                    "description": "Whether the property can have null values",
                    "name": "Nullable",
                    "ref": "#AttributeNullable.30.3",
                    "subcategory": "boolean"
                },
                {
                    "category": "basic",
                    "description": "primitive value",
                    "name": "DefaultValue",
                    "ref": "#AttributeDefaultValue.30.4",
                    "subcategory": "primitive-value"
                },
                {
                    "category": "reference",
                    "description": "qualified term name",
                    "name": "BaseTerm",
                    "ref": "#AttributeBaseTerm.30.5"
                },
                {
                    "category": "basic",
                    "description": "specifies a list of model elements to which the term MAY be applied to.",
                    "name": "AppliesTo",
                    "ref": "#Applicability",
                    "symbols": [
                        "Action",
                        "ActionImport",
                        "Annotation",
                        "Apply",
                        "Cast",
                        "Collection",
                        "ComplexType",
                        "EntityContainer",
                        "EntitySet",
                        "EntityType",
                        "EnumType",
                        "Function",
                        "FunctionImport",
                        "If",
                        "Include",
                        "IsOf",
                        "LabeledElement",
                        "Member",
                        "NavigationProperty",
                        "Null",
                        "OnDelete",
                        "Parameter",
                        "Property",
                        "PropertyValue",
                        "Record",
                        "Reference",
                        "ReferentialConstraint",
                        "ReturnType",
                        "Schema",
                        "Singleton",
                        "Term",
                        "TypeDefinition",
                        "UrlRef"
                    ]
                }
            ]
        },
        {
            "name": "edm:Annotation",
            "description": "An annotation applies a term to a model element and defines how to calculate a value for the term application.",
            "ref": "#ElementedmAnnotation.31",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "reference",
                    "description": "qualified term name",
                    "name": "Term",
                    "ref": "#AttributeTerm.31.1"
                },
                {
                    "category": "basic",
                    "description": "Optional qualifier to distinguish multiple instances",
                    "name": "Qualifier",
                    "ref": "#Qualifier",
                    "subcategory": "simple-identifier"
                }
            ]
        },
        {
            "name": "edmx:Edmx",
            "description": "The root element of a CSDL XML document.",
            "ref": "#ElementedmxEdmx.2",
            "children": [
                "edmx:DataServices",
                "edmx:Reference"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "description": "version number string",
                    "name": "Version",
                    "ref": "#AttributeVersion.2.1",
                    "subcategory": "string"
                }
            ]
        },
        {
            "name": "edmx:DataServices",
            "description": "The edmx:DataServices contains one or more edm:Schema elements.",
            "ref": "#ElementedmxDataServices.3",
            "children": [
                "edm:Schema"
            ],
            "attributes": []
        },
        {
            "name": "edmx:Reference",
            "description": "specifies external CSDL documents",
            "ref": "#ElementedmxReference.4",
            "children": [
                "edmx:Include",
                "edmx:IncludeAnnotations"
            ],
            "attributes": [
                {
                    "category": "basic",
                    "description": "URI string",
                    "name": "Uri",
                    "ref": "#AttributeUri.4.1",
                    "subcategory": "uri"
                }
            ]
        },
        {
            "name": "edmx:Include",
            "description": "Specifies a schema to include from the referenced CSDL document.",
            "ref": "#ElementedmxInclude.5",
            "children": [
                "edm:Annotation"
            ],
            "attributes": [
                {
                    "category": "reference",
                    "description": "namespace reference",
                    "name": "Namespace",
                    "ref": "#AttributeNamespace.5.1"
                },
                {
                    "category": "basic",
                    "description": "The value that can be used in qualified names instead of the namespace.",
                    "name": "Alias",
                    "ref": "#AttributeAlias.5.2",
                    "subcategory": "simple-identifier"
                }
            ]
        },
        {
            "name": "edmx:IncludeAnnotations",
            "description": "Specifies the annotations to include from the referenced CSDL document. Add",
            "ref": "#ElementedmxIncludeAnnotations.6",
            "children": [],
            "attributes": [
                {
                    "category": "reference",
                    "description": "namespace reference",
                    "name": "TermNamespace",
                    "ref": "#AttributeTermNamespace.6.1"
                },
                {
                    "category": "basic",
                    "description": "Optional qualifier to distinguish multiple instances",
                    "name": "Qualifier",
                    "ref": "#AttributeQualifier.6.2",
                    "subcategory": "simple-identifier"
                },
                {
                    "category": "reference",
                    "description": "namespace reference",
                    "name": "TargetNamespace",
                    "ref": "#AttributeTargetNamespace.6.3"
                }
            ]
        }
    ],
    "attributeCategories": {
        "basic": {
            "description": "Basic Attribute are primitive like strings, booleans, numbers, ... that are just data, associated with the model element ( )",
            "name": "Basic Attributes",
            "subcategories": [
                {
                    "description": "truth value:  true of false",
                    "name": "boolean"
                },
                {
                    "description": "Simple name identifier following XML naming rules",
                    "name": "simple-identifier"
                },
                {
                    "description": "Whole number value",
                    "name": "integer"
                },
                {
                    "description": "Integer value greater than zero",
                    "name": "positive-integer"
                },
                {
                    "description": "Integer value greater than or equal to zero",
                    "name": "non-negative-integer"
                },
                {
                    "description": "Uniform Resource Identifier",
                    "name": "uri"
                },
                {
                    "description": "any primitive value (string, number, boolean, etc.)",
                    "name": "primitive-value"
                }
            ]
        },
        "path": {
            "description": "Path expressions in form of a sequence of model element names. Represented in XML/JSON as a string of element names with delimiters",
            "name": "Path Attributes",
            "subcategories": [
                {
                    "description": "Paths that are naming connected elements by starting from the root of the model",
                    "name": "Absolute Path"
                },
                {
                    "description": "Paths that are resolved relative to a specific element context",
                    "name": "Relative Path"
                }
            ]
        },
        "reference": {
            "description": "Reference Attributes are symbolic references to model elements. They are epresented in CSDL XML/JSON as qualified names, type names, target paths, etc.",
            "name": "Reference Attributes",
            "subcategories": [
                {
                    "description": "symbolic references that reference elements anywhere in the model",
                    "name": "Absolute Reference"
                },
                {
                    "description": "symbolic references that reference elements relative to a specific ancestor (or related) context element",
                    "name": "Relative Reference"
                }
            ]
        }
    }
}